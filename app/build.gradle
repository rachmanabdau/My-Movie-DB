apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    defaultConfig {
        applicationId "com.example.mymoviddb"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", 'V3_AUTH', "\"13714dbc99120b5b53dfec1385fb1aa5\""
            buildConfigField "String", 'BASE_URL', "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", 'LOAD_POSTER_BASE_URL', "\"https://image.tmdb.org/t/p/w500\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            debuggable true
        }

        release {
            buildConfigField "String", 'V3_AUTH', "\"13714dbc99120b5b53dfec1385fb1aa5\""
            buildConfigField "String", 'BASE_URL', "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", 'LOAD_POSTER_BASE_URL', "\"https://image.tmdb.org/t/p/w250\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.activity:activity-ktx:$version_activity"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // ViewModel & Live Data
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$version_lifecycle"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.1"


    // Kotlin Android Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
    // Corouteine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"

    // Moshi converter
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // Moshi Library
    implementation 'com.squareup.moshi:moshi-kotlin:1.11.0'

    // Material components
    implementation "com.google.android.material:material:1.2.1"

    // hamcrest framework for more readeble testing
    testImplementation "org.hamcrest:hamcrest-all:1.3"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:1.3.0"
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"

    // Retrofit testing
    testImplementation('com.squareup.okhttp3:mockwebserver:4.9.0')

    // Room Presistence Library
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$version_room"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Preference
    implementation "androidx.preference:preference-ktx:1.1.1"

}