plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", 'V3_AUTH', "\"13714dbc99120b5b53dfec1385fb1aa5\""
            buildConfigField "String", 'BASE_URL', "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", 'LOAD_POSTER_BASE_URL', "\"https://image.tmdb.org/t/p/w500\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            debuggable true
        }

        release {
            buildConfigField "String", 'V3_AUTH', "\"13714dbc99120b5b53dfec1385fb1aa5\""
            buildConfigField "String", 'BASE_URL', "\"https://api.themoviedb.org/3/\""
            buildConfigField "String", 'LOAD_POSTER_BASE_URL', "\"https://image.tmdb.org/t/p/w500\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    hilt {
        enableTransformForLocalTests = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$version_androidx_core"
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "com.google.android.material:material:$version_material"
    testImplementation "junit:junit:$version_junit"
    androidTestImplementation "androidx.test.ext:junit:$version_android_test_ext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"

    // Kotlin Android Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutines"
    // Coroutine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"

    // Moshi converter
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_corouitine"

    // Moshi Library
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Hilt for DI
    implementation "com.google.dagger:hilt-android:$version_dagger_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$version_dagger_hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$version_hilt"
    kapt "androidx.hilt:hilt-compiler:$version_hilt"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$version_hilt"

    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$version_hilt_android_test"
    // Make Hilt generate code in the androidTest folder
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$version_dagger_hilt"
    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:$version_hilt_android_test"
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:$version_hilt"
}